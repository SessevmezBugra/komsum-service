version: '3.9'

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    privileged: true

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

  config-server:
    container_name: config-server
    image: bsessevmez/config-server:latest
    build:
      context: config-server
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      ACTIVE_PROFILE: $CONFIG_SERVER_ACTIVE_PROFILE
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8888:8888"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    restart: always
    #    depends_on:
    # - rabbitmq
    #      - zipkin-server
    volumes:
#      - /root/.ssh:/root/.ssh ####
      - ./config-server/.ssh:/root/.ssh

  eureka-server:
    container_name: eureka-server
    image: bsessevmez/eureka-server:latest
    build:
      context: eureka-server
      dockerfile: Dockerfile
    environment:
      CONFIG_URI: $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8761:8761"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - config-server

  gateway-service:
    container_name: gateway-service
    image: bsessevmez/gateway-service:latest
    build:
      context: gateway-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      CONFIG_URI: $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      VIRTUAL_HOST: service.dev.komsumdannehaber.com
      VIRTUAL_PORT: 4000
      LETSENCRYPT_HOST: service.dev.komsumdannehaber.com
      LETSENCRYPT_EMAIL: sessevmezbugra@gmail.com
      AUTH_SERVICE_URI: $AUTH_SERVICE_URI
      GEOGRAPHY_SERVICE_URI: $GEOGRAPHY_SERVICE_URI
      POST_SERVICE_URI: $POST_SERVICE_URI
      TAG_SERVICE_URI: $TAG_SERVICE_URI
      FEED_SERVICE_URI: $FEED_SERVICE_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "4000:4000"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server
      - nginx-proxy

  geography-service:
    container_name: geography-service
    image: bsessevmez/geography-service:latest
    build:
      context: geography-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      ACTIVE_PROFILE: $ACTIVE_PROFILE
      RDS_HOSTNAME: $GEOGRAPHY_DB_HOSTNAME
      RDS_PORT: $GEOGRAPHY_DB_PORT
      RDS_DB_NAME: $GEOGRAPHY_DB_NAME
      RDS_USERNAME: $GEOGRAPHY_DB_USERNAME
      RDS_PASSWORD: $GEOGRAPHY_DB_PASSWORD
      CONFIG_URI:  $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      KEYCLOAK_URI: $KEYCLOAK_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8090:8090"
#    labels:
#      collect_logs_with_filebeat: "true"
#      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - geography-database
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server

  geography-database:
    container_name: geography-database
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: $GEOGRAPHY_DB_PASSWORD
      MYSQL_USER: $GEOGRAPHY_DB_USERNAME
      MYSQL_PASSWORD: $GEOGRAPHY_DB_PASSWORD
      MYSQL_DATABASE: $GEOGRAPHY_DB_NAME
    ports:
      - "${GEOGRAPHY_DB_EXPOSED_PORT}:3306"
    restart: always
    volumes:
      - /var/lib/mysql-volume:/var/lib/mysql

  post-service:
    container_name: post-service
    image: bsessevmez/post-service:latest
    build:
      context: post-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      ACTIVE_PROFILE: $ACTIVE_PROFILE
      RDS_HOSTNAME: $POST_DB_HOSTNAME
      RDS_PORT: $POST_DB_PORT
      RDS_DB_NAME: $POST_DB_NAME
      RDS_USERNAME: $POST_DB_USERNAME
      RDS_PASSWORD: $POST_DB_PASSWORD
      RDS_ADMIN_DATABASE: $POST_ADMIN_DATABASE
      CONFIG_URI: $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      KEYCLOAK_URI: $KEYCLOAK_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8091:8091"
    #    labels:
    #      collect_logs_with_filebeat: "true"
    #      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - post-database
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server

  post-database:
    container_name: post-database
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: $POST_DB_HOSTNAME
    deploy:
      resources:
        limits:
          memory: 500M

  tag-service:
    container_name: tag-service
    image: bsessevmez/tag-service:latest
    build:
      context: tag-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      ACTIVE_PROFILE: $ACTIVE_PROFILE
      RDS_HOSTNAME: $POST_DB_HOSTNAME
      RDS_PORT: $POST_DB_PORT
      RDS_DB_NAME: $TAG_DB_NAME
      RDS_USERNAME: $POST_DB_USERNAME
      RDS_PASSWORD: $POST_DB_PASSWORD
      RDS_ADMIN_DATABASE: $POST_ADMIN_DATABASE
      CONFIG_URI: $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      KEYCLOAK_URI: $KEYCLOAK_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8092:8092"
    #    labels:
    #      collect_logs_with_filebeat: "true"
    #      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - post-database
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server

  feed-service:
    container_name: feed-service
    image: bsessevmez/feed-service:latest
    build:
      context: feed-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      ACTIVE_PROFILE: $ACTIVE_PROFILE
      RDS_HOSTNAME: $FEED_DB_HOSTNAME
      RDS_PORT: $FEED_DB_PORT
      RDS_DB_NAME: $FEED_DB_NAME
      CONFIG_URI: $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      KEYCLOAK_URI: $KEYCLOAK_URI
      DATA_CENTER: $DATA_CENTER
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8093:8093"
    #    labels:
    #      collect_logs_with_filebeat: "true"
    #      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - cassandra
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    restart: always
    ports:
      - "9042:9042"
    # deploy:
    #   resources:
    #     limits:
    #       memory: 3G

  file-service:
    container_name: file-service
    image: bsessevmez/file-service:latest
    build:
      context: file-service
      dockerfile: Dockerfile
    environment:
      # RABBIT_URI: $RABBIT_URI
      ACTIVE_PROFILE: $ACTIVE_PROFILE
      RDS_HOSTNAME: $FILE_DB_HOSTNAME
      RDS_PORT: $FILE_DB_PORT
      RDS_DB_NAME: $FILE_DB_NAME
      RDS_USERNAME: $FILE_DB_USERNAME
      RDS_PASSWORD: $FILE_DB_PASSWORD
      CONFIG_URI:  $CONFIG_URI
      FAIL_FAST: $FAIL_FAST
      EUREKA_URI: $EUREKA_URI
      ZIPKIN_URI: $ZIPKIN_URI
      KEYCLOAK_URI: $KEYCLOAK_URI
    deploy:
      resources:
        limits:
          memory: 500M
    ports:
      - "8094:8094"
#    labels:
#      collect_logs_with_filebeat: "true"
#      decode_log_event_to_json_object: "true"
    restart: always
    depends_on:
      - geography-database #file-database olarak degistirilecek
      - eureka-server
      # - rabbitmq
      #      - zipkin-server
      - config-server

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    environment:
      VIRTUAL_HOST: auth.dev.komsumdannehaber.com
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: auth.dev.komsumdannehaber.com
      LETSENCRYPT_EMAIL: sessevmezbugra@gmail.com
      PROXY_ADDRESS_FORWARDING: "false"
      JDBC_PARAMS: "ssl=false" 
      DB_VENDOR: MYSQL
      DB_ADDR: $FILE_DB_HOSTNAME
      DB_DATABASE: $FILE_DB_NAME
      DB_USER: $FILE_DB_USERNAME
      DB_PASSWORD: $FILE_DB_PASSWORD
      KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_HOSTNAME: auth.dev.komsumdannehaber.com
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - 8081:8080
    depends_on:
      # - keycloak-database
      - nginx-proxy
      - geography-database #keycloak-database olarak degistirilecek

# Volumes
volumes:
  database-volume:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:


networks:
  default:
    external:
      name: webproxy